{"version":3,"sources":["assets/GlobalStyles.js","assets/theme.js","firebase.js","hooks/useAuth.js","providers/AppProviders.js","components/Input.js","components/Button.js","App.styles.js","App.js","index.js"],"names":["GlobalStyles","createGlobalStyle","theme","color","primary","secondaryDarken","primaryDarken","secondary","app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","db","firestore","AuthContext","React","createContext","useAuth","useContext","console","error","AuthProvider","children","useState","currentUser","setCurrentUser","isLoading","setLoadingState","useEffect","onAuthStateChanged","user","value","signIn","login","password","signInWithEmailAndPassword","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","signOut","Provider","AppProviders","Input","styled","TextField","Button","MButton","isDark","Wrapper","div","Form","form","ChatBlock","Chat","ChatSend","ChatInfo","sliceIn","keyframes","ErrorMessage","p","Authorized","username","setUsername","useForm","register","handleSubmit","errors","formState","chat","useRef","collection","orderBy","onSnapshot","snapshot","current","innerHTML","forEach","doc","data","nick","message","updateChat","preparedName","email","split","a","time","Date","getTime","set","style","cursor","onClick","ref","onSubmit","width","marginRight","variant","placeholder","id","required","type","UnAuthorized","setError","label","minLength","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42b67ab7.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n    html {\r\n        font-family: Arial, Helvetica, sans-serif;\r\n    }\r\n    body {\r\n        margin: 0;\r\n        padding: 0;\r\n        overflow: hidden;\r\n        min-height: 100vh;\r\n        color: ${({ theme }) => theme.color.primary};\r\n        background-color: ${({ theme }) => theme.color.secondaryDarken};\r\n    }\r\n    *, *::after, *::before {\r\n        box-sizing: border-box;\r\n    }\r\n`;\r\n","export const theme = {\r\n  color: {\r\n    primary: 'hsl(60, 60%, 70%)',\r\n    primaryDarken: 'hsl(60, 60%, 50%)',\r\n    secondary: 'hsl(220, 30%, 40%)',\r\n    secondaryDarken: 'hsl(220, 30%, 25%)'\r\n  }\r\n};\r\n","import firebase from 'firebase';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\nconst app = firebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID\r\n});\r\n\r\nexport const auth = app.auth();\r\nexport const db = app.firestore();\r\nexport default firebase;\r\n","import firebase, { auth } from '../firebase';\r\nimport React, { useEffect, useState, useContext } from 'react';\r\n\r\nconst AuthContext = React.createContext({});\r\nconst AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [isLoading, setLoadingState] = useState(true);\r\n\r\n  const signIn = (login, password) => auth.signInWithEmailAndPassword(login, password);\r\n  const signOut = () => auth.signOut();\r\n  const signInWithGoogle = () => {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    auth.signInWithPopup(provider);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoadingState(true);\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      setCurrentUser(user);\r\n      setLoadingState(false);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const value = {\r\n    currentUser,\r\n    signIn,\r\n    signInWithGoogle,\r\n    signOut\r\n  };\r\n  return <AuthContext.Provider value={value}>{isLoading ? <p>Loading...</p> : children}</AuthContext.Provider>;\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const auth = useContext(AuthContext);\r\n  if (!auth) return console.error('Ooops! Something went wrong!');\r\n  return auth;\r\n};\r\n\r\nexport default AuthProvider;\r\n","import { GlobalStyles } from 'assets/GlobalStyles';\r\nimport { theme } from 'assets/theme';\r\nimport AuthProvider from 'hooks/useAuth';\r\nimport React from 'react';\r\nimport { ThemeProvider } from 'styled-components';\r\n\r\nconst AppProviders = ({ children }) => {\r\n  return (\r\n    <AuthProvider>\r\n      <ThemeProvider theme={theme}>\r\n        <GlobalStyles />\r\n        {children}\r\n      </ThemeProvider>\r\n    </AuthProvider>\r\n  );\r\n};\r\n\r\nexport default AppProviders;\r\n","import { TextField } from '@material-ui/core';\r\nimport styled from 'styled-components';\r\n\r\nexport const Input = styled(TextField)`\r\n  label {\r\n    color: ${({ theme }) => theme.color.primary} !important;\r\n    &.Mui-focused {\r\n      color: ${({ theme }) => theme.color.primaryDarken} !important;\r\n    }\r\n  }\r\n  div {\r\n    &::before {\r\n      border-bottom: 1px solid ${({ theme }) => theme.color.secondaryDarken} !important;\r\n    }\r\n    &::after {\r\n      border-bottom: 2px solid ${({ theme }) => theme.color.primary} !important;\r\n    }\r\n    &:hover {\r\n      &::before {\r\n        border-bottom: 2px solid ${({ theme }) => theme.color.secondaryDarken} !important;\r\n      }\r\n    }\r\n  }\r\n  input {\r\n    color: white;\r\n  }\r\n`;\r\n","import { Button as MButton } from '@material-ui/core';\r\nimport styled from 'styled-components';\r\n\r\nexport const Button = styled(MButton)`\r\n  color: ${({ isDark, theme }) => (isDark ? theme.color.secondaryDarken : theme.color.primary)} !important;\r\n`;\r\n","import styled, { keyframes } from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  width: 100%;\r\n  max-width: 500px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 5px 20px -11px black;\r\n  background-color: ${({ theme }) => theme.color.secondary};\r\n  padding: 10px 15px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  .MuiFormControl-root {\r\n    margin-block: 10px;\r\n  }\r\n  button {\r\n    margin-top: 20px;\r\n  }\r\n`;\r\n\r\nexport const ChatBlock = styled.div`\r\n  width: 700px;\r\n  height: 500px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 5px 20px -11px black;\r\n  background-color: ${({ theme }) => theme.color.secondary};\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 20px;\r\n  & > * {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const Chat = styled.div`\r\n  border-top: 4px solid white;\r\n  background-color: ${({ theme }) => theme.color.secondaryDarken};\r\n  height: 75%;\r\n  border-radius: 0 0 10px 10px;\r\n  padding: 10px 20px;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  &::-webkit-scrollbar {\r\n    width: 10px;\r\n    background-color: hsl(220, 30%, 20%);\r\n    border-radius: 0 0 10px 0;\r\n  }\r\n  &::-webkit-scrollbar-thumb {\r\n    background: ${({ theme }) => theme.color.primary};\r\n  }\r\n`;\r\nexport const ChatSend = styled.form`\r\n  height: 15%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\nexport const ChatInfo = styled.div`\r\n  height: 10%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst sliceIn = keyframes`\r\n    from {\r\n        opacity: 0;\r\n        transform: translateY(-150%);\r\n    }\r\n    to {\r\n        opacity: 1;\r\n        transform: translateY(0%);\r\n    }\r\n`;\r\n\r\nexport const ErrorMessage = styled.p`\r\n  color: hsl(0, 70%, 60%);\r\n  animation: ${sliceIn} 1.5s forwards;\r\n`;\r\n","import { useAuth } from 'hooks/useAuth';\nimport React, { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Input } from 'components/Input';\nimport { Button } from 'components/Button';\nimport { db } from './firebase';\nimport { Wrapper, ChatBlock, ChatInfo, Chat, ChatSend, Form, ErrorMessage } from 'App.styles';\n\nconst App = () => {\n  const { currentUser } = useAuth();\n  return currentUser ? <Authorized /> : <UnAuthorized />;\n};\n\nconst Authorized = () => {\n  const [username, setUsername] = useState();\n  const { currentUser, signOut } = useAuth();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors }\n  } = useForm();\n\n  const chat = React.useRef(null);\n\n  const updateChat = (data) => {\n    const { nick, message } = data;\n    chat.current.innerHTML += `<div style=\"color: black; display: flex; align-items: flex-start; padding: 7px 12px; background: white; border-radius: 10px; width: fit-content; flex-direction: column; max-width: 90%; margin: 15px 0;\"><b>${nick}</b><span>${message}</span></div>`;\n  };\n\n  useEffect(() => {\n    db.collection('messages')\n      .orderBy('time', 'asc')\n      .onSnapshot((snapshot) => {\n        chat.current.innerHTML = '';\n        snapshot.forEach((doc) => {\n          updateChat(doc.data());\n        });\n      });\n  }, []);\n\n  useEffect(() => {\n    const preparedName = currentUser.email.split('@')[0];\n    setUsername(preparedName);\n  }, [currentUser]);\n\n  const process = async ({ message }) => {\n    const time = new Date().getTime();\n    await db.collection('messages').doc().set({\n      nick: username,\n      message,\n      time\n    });\n  };\n\n  return (\n    <Wrapper>\n      <ChatBlock>\n        <ChatInfo>\n          <p>\n            <b style={{ color: '#fff' }}>User:</b> {username}\n          </p>\n          <p style={{ cursor: 'pointer' }} onClick={signOut}>\n            Log out\n          </p>\n        </ChatInfo>\n        <Chat ref={chat}></Chat>\n        <ChatSend onSubmit={handleSubmit(process)}>\n          <Input\n            style={{ width: '70%', marginRight: '20px' }}\n            variant=\"outlined\"\n            placeholder={errors.message ? 'Type something to send message!' : 'Type something...'}\n            id=\"message\"\n            {...register('message', { required: true })}\n          />\n          <Button style={{ width: '30%' }} variant=\"contained\" type=\"submit\" isDark>\n            Send Message\n          </Button>\n        </ChatSend>\n      </ChatBlock>\n    </Wrapper>\n  );\n};\n\nconst UnAuthorized = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors }\n  } = useForm();\n  const { signIn, signInWithGoogle } = useAuth();\n  const [error, setError] = useState();\n\n  const process = async ({ email, password }) => {\n    setError(null);\n    try {\n      await signIn(email, password);\n    } catch (e) {\n      setError(e.message);\n    }\n  };\n\n  return (\n    <Wrapper>\n      <Form onSubmit={handleSubmit(process)}>\n        <Input id=\"email\" label=\"Email\" placeholder=\"example@domain.com\" {...register('email', { required: true })} />\n        {errors.email && <ErrorMessage>Email is required.</ErrorMessage>}\n        <Input id=\"password\" label=\"Password\" type=\"password\" {...register('password', { required: true, minLength: 8 })} />\n        {errors.password && <ErrorMessage>Password should have at least 8 characters.</ErrorMessage>}\n        {error && <ErrorMessage>{error}</ErrorMessage>}\n        <Button variant=\"outlined\" type=\"submit\">\n          Sign in\n        </Button>\n        <Button variant=\"outlined\" onClick={signInWithGoogle}>\n          Sign in with Google\n        </Button>\n      </Form>\n    </Wrapper>\n  );\n};\n\nexport default App;\n","import AppProviders from 'providers/AppProviders';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProviders>\n      <App />\n    </AppProviders>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}